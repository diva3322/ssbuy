name: Generate Sitemap and Deploy

on:
  push:
    branches:
      - main # 當您推送到 main 分支時觸發此工作流程
      # 您也可以添加其他分支，例如 - master 或 - gh-pages，取決於您的部署分支

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在 Ubuntu 系統上運行此作業

    steps:
    - name: Checkout code # 步驟 1: 檢出您的倉庫代碼
      uses: actions/checkout@v4

    - name: Setup Node.js # 步驟 2: 設定 Node.js 環境
      uses: actions/setup-node@v4
      with:
        node-version: '18' # 使用 Node.js 18 LTS 版本

    - name: Install dependencies # 步驟 3: 安裝 Node.js 套件 (例如 fast-xml-parser)
      run: npm install

    - name: Run sitemap generation script # 步驟 4: 執行您的 sitemap 生成腳本
      run: node generate-sitemap.js # 執行我們在步驟 1 建立的腳本

    - name: Verify sitemap existence (Optional) # 可選: 檢查 sitemap.xml 是否已生成
      run: ls -l sitemap.xml

    - name: Deploy to GitHub Pages # 步驟 5: 將更新後的網站檔案 (包括 sitemap.xml) 部署到 GitHub Pages
      uses: peaceiris/actions-gh-pages@v3 # 使用一個受歡迎的 Action 來部署
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # GitHub Pages 部署所需的權限
        publish_dir: ./ # 指定要部署的目錄。如果您的網站檔案在 'docs' 或其他子目錄，請修改這裡
        # 如果您的 GitHub Pages 是從 'main' 分支的根目錄部署，那麼 './' 是正確的。
        # 如果是從 'gh-pages' 分支部署，此 Action 會自動處理。
        # 如果是從 'main' 分支的 'docs' 資料夾部署，請改為 'docs'。
